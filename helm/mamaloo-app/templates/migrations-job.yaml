{{- if .Values.migrations.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mamaloo-app.fullname" . }}-migrations-{{ .Release.Revision }}
  labels:
    {{- include "mamaloo-app.labels" . | nindent 4 }}
    app.kubernetes.io/component: migrations
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    argocd.argoproj.io/sync-wave: "5"
spec:
  backoffLimit: {{ .Values.migrations.backoffLimit }}
  template:
    metadata:
      labels:
        {{- include "mamaloo-app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: migrations
    spec:
      restartPolicy: Never
      initContainers:
      - name: wait-for-db
        image: postgres:15-alpine
        command: 
          - sh
          - -c
          - |
            echo "Aguardando database ficar pronto..."
            until pg_isready -h {{ include "mamaloo-app.fullname" . }}-database -p {{ .Values.database.port }} -U {{ .Values.database.user }}; do
              echo "Database ainda não está pronto, aguardando..."
              sleep 2
            done
            echo "✓ Database está pronto!"
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "mamaloo-app.fullname" . }}-db-secret
              key: POSTGRES_PASSWORD
      containers:
      - name: migrations
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        command:
          - sh
          - -c
          - |
            echo "Iniciando migrations..."
            alembic upgrade head
            echo "✓ Migrations concluídas com sucesso!"
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "mamaloo-app.fullname" . }}-db-secret
              key: DATABASE_URL
{{- end }}
